
3、深刻的来理解函数的三种角色
    var num = 0;
    function Fn(num) {
        arguments[0] = 100;
        this.num = 200;
        console.log(num);
        console.log(this.num);
        return num;
    }

    Fn.num = 400;
    Fn.prototype.num = 300;
    Fn.prototype.getNum = function () {
        console.log(this.num);
    };

    var f = new Fn(num);
    console.log(f.num);
    f.getNum();
    Fn.prototype.getNum();
    console.log(num);

    var n = Fn(num);
    console.log(n);
    console.log(num);

1、var f = new Fn(num),此时的Fn是一个实例，传了一个参数num，值为0；arguments[0]=100;私有变量num变为100；this.num = 200；this是f，也就是f.num=200;第一次输出num是100；第二次输出的this.num就是f.num也就是200，然后返回。
2、console.log(f.num)此时f.num是200；f.getNum()输出的是f的公有属性，也就是200；
3、Fn.prototype.getNum();此时里面的 this指的是Fn.prototype,此时Fn.prototype.num在上面定义了是300，输出300，
4、console.log(num);输出的是0；
5、var n = Fn(num);此时的Fn是当做一个普通函数执行的，传了一形参num，console.log(n);执行的时候返回的是100；console.log(num);Fn执行输出num是200
