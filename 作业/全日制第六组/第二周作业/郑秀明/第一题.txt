一、
JSON 是一种轻量级的数据交换格式。主要用于前后台数据交互的时候作为数据存储的载体，后台返回给我们的数据基本上都是JSON格式。
二、
1.JSON的属性名必须有双引号，如果值是字符串，也必须是双引号，对象的属性名不需要加双引号。
2.使用stringify将JS对象装换为JSON字符串；
3.使用parse，把JSON格式的字符串转换为JSON格式的对象。
三、
数组也是一种对象，其中的元素可以是任意类型的数据，并且可以是多种数据类型一起存到同一个数组中，因为数组是一个对象，所以它可以拥有自己得属性，比如本身自带length属性，也可以自定义属性。
数组跟普通对象相比，还多了个键的概念，数组的键值是一个正整数；js中普通对象也有键的概念，因为js中的对象就是一个键和值（key-value）组成的集合。普通对象的键可以理解成一个属性,跟数组不同的是，它的键名不是必须整数的，可以是任何符合js规范的一个标识名
数组表示有序数据的集合，而对象表示无序数据的集合。如果数据的顺序很重要，就用数组，否则就用对象。
JS中也有类数组对象，具有类数组的特性，以连续的数字作为属性，并且也用length来表示存储的个数
四、
共同点：call和apply都是用来改变函数中this的指向得，都是让方法中的this变为第一个参数的值。
区别：就是在传递函数的参数值的时候，call是一个个的分别传递值，而apply需要把传递的值放到一个数组中一起传递给函数，但是虽然是这样写，也相当于分别的给形参赋值。
五、eval得作用是将字符串转换为表达式执行。
六、弹出得结果为[object Object].因为alert弹出是一个字符串的内容，它会自动调用toString的方法，输出结果都是"[object 类的名称]"
七、Object.prototype.toString.call()==="[object Array]"
八、try{代码成立，则不执行catch里的内容}catch(e){try里的代码不成立才执行，e是try里的代码不成立时返回的一个异常信息，}finally{finally可以不写,无论try里的代码是否成立都会执行。}
九、1）function sortAry(){
	var ary=Array.prototype.slice.call(arguments,0);
	ary.sort(function){
	return a-b;
	}
    }
2）文档集合是一个类数组，无法直接使用数组的方法。
十、答案是“2”和“1”；1）执行call方法，放fn1执行，并且把fn中得this变为fn2。2）、fn3=fn2.call->fn3.call(fn1)->fn2.call.call(fn1):首先执行最后一个call方法，让fn2.call执行，将fn2.call里的this改为fn1->fn1.call()->也就是fn1执行。